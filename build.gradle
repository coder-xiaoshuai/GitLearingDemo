// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "org.sonarqube"
buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        if (project.hasProperty('GRADLE_3') && GRADLE_3.equalsIgnoreCase('TRUE')) {
            classpath 'com.android.tools.build:gradle:3.6.0'
        } else {
            classpath 'com.android.tools.build:gradle:2.3.3'
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"

        classpath("com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}") {
            changing = TINKER_VERSION?.endsWith("-SNAPSHOT")
            exclude group: 'com.android.tools.build', module: 'gradle'
        }

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        // 私有仓库地址
        maven { url "http://lib.gcssloop.com:8081/repository/gcssloop-central/" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // Android
    compileSdkVersion = 27
    minSdkVersion = 19
    targetSdkVersion = 26
    buildToolsVersion = '26.0.2'


//    kotlin_version = '1.3.50'
//    robolectricVersion = '4.3.1'
    extTruthVersion = '1.2.0'
    coreVersion = '1.2.0'
    coreKtxVersion = '1.2.0'
    extJUnitVersion = '1.1.1'
    runnerVersion = '1.2.0'
    espressoVersion = '3.2.0'

    // Third-part library
    dependencies = [
            // circle_view
            circle_view: 'com.gcssloop.widget:rclayout:1.8.1',
            jsBridge   : 'com.github.lzyzsd:jsbridge:1.0.4',
            coroutines : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    ]
}

def is_gradle_3() {
    return hasProperty('GRADLE_3') && GRADLE_3.equalsIgnoreCase('TRUE')
}


//ext {
//    gradle_version = '3.4.2'
//    kotlin_version = '1.3.50'
//    robolectricVersion = '4.3.1'
//    extTruthVersion = '1.2.0'
//    coreVersion = '1.2.0'
//    coreKtxVersion = '1.2.0'
//    extJUnitVersion = '1.1.1'
//    runnerVersion = '1.2.0'
//    espressoVersion = '3.2.0'
//
//    apk_paths = {}
//    flavor_map = {}
//    isPublish = Boolean.valueOf(rootProject.findProperty("yidui.isPublish"))
//    trustProxy = Boolean.valueOf(rootProject.findProperty("yidui.trustProxy"))
//}